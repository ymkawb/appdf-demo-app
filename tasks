[info] Loading project definition from D:\usr\src\github\AppDF\tools\demo-app\appdf_demo_app\project
[info] Set current project to appdf_demo_app (in build file:/D:/usr/src/github/AppDF/tools/demo-app/appdf_demo_app/)

This is a list of tasks defined for the current project.
It does not list the scopes the tasks are defined in; use the 'inspect' command for that.
Tasks produce values.  Use the 'show' command to run the task and print the resulting value.


  all-dependencies                           Inter-project and library dependencies.
  app-configuration                          Provides access to the launched sbt configuration, including the ScalaProvider, Launcher, and GlobalLock.
  artifact                                   Describes an artifact.
  artifact-classifier                        Sets the classifier used by the default artifact definition.
  artifact-name                              Function that produces the artifact name from its definition.
  artifact-path                              The location of a generated artifact.
  artifacts                                  The artifact definitions for the current module.  Must be consistent with packaged-artifacts.
  auto-compiler-plugins                      If true, enables automatically generating -Xplugin arguments to the compiler based on the classpath for the plugin configuration.
  auto-scala-library                         Adds a dependency on scala-library if true.
  base-directory                             The base directory.  Depending on the scope, this is the base directory for the build, project, configuration, or task.
  build-dependencies                         Definitive source of inter-project dependencies for compilation and dependency management.
	This is populated by default by the dependencies declared on Project instances, but may be modified.
	The main restriction is that new builds may not be introduced.
  cache-directory                            Directory used for caching task data.
  checksums                                  The list of checksums to generate and to verify for dependencies.
  class-directory                            Directory for compiled classes and copied resources.
  classifiers-module                         
  classpath-configuration                    The configuration used to define the classpath.
  classpath-filter                           Filter for selecting unmanaged dependencies.
  classpath-options                          Configures handling of Scala classpaths.
  classpath-types                            Artifact types that are included on the classpath.
  clean                                      Deletes files produced by the build, such as generated sources, compiled classes, and task caches.
  clean-files                                The files to recursively delete during a clean.
  clean-keep-files                           Files to keep during a clean.
  cleanup-commands                           Commands to execute before the Scala interpreter exits.
  commands                                   Defines commands to be registered when this project or build is the current selected one.
  compile                                    Compiles sources.
  compile-inputs                             Collects all inputs needed for compilation.
  compile-order                              Configures the order in which Java and sources within a single compilation are compiled.  Valid values are: JavaThenScala, ScalaThenJava, or Mixed.
  compilers                                  Defines the Scala and Java compilers to use for compilation.
  configuration                              Provides the current configuration of the referencing scope.
  conflict-warning                           Configures warnings for conflicts in dependency management.
  connect-input                              If true, connects standard input when running a main class forked.
  console                                    Starts the Scala interpreter with the project classes on the classpath.
  console-project                            Starts the Scala interpreter with the sbt and the build definition on the classpath and useful imports.
  console-quick                              Starts the Scala interpreter with the project dependencies on the classpath.
  copy-resources                             Copies resources to the output directory.
  credentials                                The credentials to use for updating and publishing.
  cross-paths                                If true, enables cross paths, which distinguish output directories for cross-building.
  cross-target                               Main directory for files generated by the build that are cross-built.
  default-configuration                      Defines the configuration used when none is specified for a dependency.
  default-excludes                           Filter for excluding files, such as sources and resources, by default.
  defined-sbt-plugins                        The set of names of Plugin implementations defined by this project.
  defined-test-names                         Provides the set of defined test names.
  defined-tests                              Provides the list of defined tests.
  defines-class                              Internal use: provides a function that determines whether the provided file contains a given class.
  deliver                                    Generates the Ivy file for publishing to a repository.
  deliver-configuration                      Configuration for generating the finished Ivy file for publishing.
  deliver-local                              Generates the Ivy file for publishing to the local repository.
  deliver-local-configuration                Configuration for generating the finished Ivy file for local publishing.
  dependency-classpath                       The classpath consisting of internal and external, managed and unmanaged dependencies.
  description                                Project description.
  discovered-main-classes                    Auto-detects main classes.
  dist                                       Build the standalone application package
  doc                                        Generates API documentation.
  doc-directory                              Directory for generated documentation.
  eclipse-classpathEntryTransformerFactory   Creates a transformer for classpath entries.
  eclipse-command-name                       The name of the command.
  eclipse-create-src                         The source kinds to be included.
  eclipse-pre-tasks                          The tasks to be evaluated prior to creating the Eclipse project definition.
  exclude-filter                             Filter for excluding sources and resources files from default directories.
  execute-tests                              Executes all tests, producing a report.
  export-jars                                Determines whether the exported classpath for this project contains classes (false) or a packaged jar (true).
  exported-products                          Build products that go on the exported classpath.
  external-dependency-classpath              The classpath consisting of library dependencies, both managed and unmanaged.
  external-resolvers                         The external resolvers for automatically managed dependencies.
  extra-loggers                              A function that provides additional loggers for a given setting.
  fork                                       If true, forks a new JVM when running.  If false, runs in the same JVM as the build.
  full-classpath                             The exported classpath, consisting of build products and unmanaged and managed, internal and external dependencies.
  full-resolvers                             Combines the project resolver, default resolvers, and user-defined resolvers.
  history                                    The location where command line history is persisted.
  homepage                                   Project homepage.
  idea                                       
  inc-compile-setup                          Configurations aspects of incremental compilation.
  include-filter                             Filter for including sources and resources files from default directories.
  initial-commands                           Initial commands to execute when starting up the Scala interpreter.
  internal-configuration-map                 Maps configurations to the actual configuration used to define the classpath.
  internal-dependency-classpath              The internal (inter-project) classpath.
  is-snapshot                                True if the the version of the project is a snapshot version.
  ivy-configuration                          General dependency management (Ivy) settings, such as the resolvers and paths to use.
  ivy-configurations                         The defined configurations for dependency management.  This may be different from the configurations for Project settings.
  ivy-dependencies                           
  ivy-logging-level                          The logging level for updating.
  ivy-module                                 Provides the sbt interface to a configured Ivy module.
  ivy-paths                                  Configures paths used by Ivy for dependency management.
  ivy-sbt                                    Provides the sbt interface to Ivy.
  ivy-scala                                  Configures how Scala dependencies are checked, filtered, and injected.
  ivy-validate                               Enables/disables Ivy validation of module metadata.
  ivy-xml                                    Defines inline Ivy XML for configuring dependency management.
  java-home                                  Selects the Java installation used for compiling and forking.  If None, uses the Java installation running the build.
  java-options                               Options passed to a new JVM when forking.
  java-source                                Default Java source directory.
  javac-options                              Options for the Java compiler.
  library-dependencies                       Declares managed dependencies.
  licenses                                   Project licenses as (name, url) pairs.
  loaded-build                               Provides access to the loaded project structure.  This is the information available before settings are evaluated.
  loaded-test-frameworks                     Loads Framework definitions from the test loader.
  log-buffered                               True if logging should be buffered until work completes.
  log-manager                                The log manager, which creates Loggers for different contexts.
  main-class                                 Defines the main class for packaging or running.
  make-pom                                   Generates a pom for publishing when publishing Maven-style.
  make-pom-configuration                     Configuration for generating a pom.
  managed-classpath                          The classpath consisting of external, managed library dependencies.
  managed-directory                          Directory to which managed dependencies are retrieved.
  managed-resource-directories               List of managed resource directories.
  managed-resources                          Resources generated by the build.
  managed-source-directories                 Managed source directories, which contain sources generated by the build.
  managed-sources                            Sources generated by the build.
  mappings                                   Defines the mappings from a file to a path, used by packaging, for example.
  max-errors                                 The maximum number of errors, such as compile errors, to list.
  module-configurations                      Defines module configurations, which override resolvers on a per-module basis.
  module-name                                The name of the current module, used for dependency management.
  module-settings                            Module settings, which configure a specific module, such as a project.
  name                                       Project name.
  normalized-name                            Project name transformed from mixed case and spaces to lowercase and dash-separated.
  offline                                    Configures sbt to work without a network connection where possible.
  on-load-message                            Message to display when the project is loaded.
  organization                               Organization/group ID.
  organization-homepage                      Organization homepage.
  organization-name                          Organization full/formal name.
  other-resolvers                            Resolvers not included in the main resolver chain, such as those in module configurations.
  output-strategy                            Selects how to log output when running a main class.
  package                                    Produces the main artifact, such as a binary jar.  This is typically an alias for the task that actually does the packaging.
  package-bin                                Produces a main artifact, such as a binary jar.
  package-configuration                      Collects all inputs needed for packaging.
  package-doc                                Produces a documentation artifact, such as a jar containing API documentation.
  package-options                            Options for packaging.
  package-src                                Produces a source artifact, such as a jar containing sources and resources.
  packaged-artifact                          Generates a packaged artifact, returning the Artifact and the produced File.
  packaged-artifacts                         Packages all artifacts for publishing and maps the Artifact definition to the generated file.
  parallel-execution                         Enables (true) or disables (false) parallel execution of tasks.
  play-assets-directories                    
  play-closure-compiler-options              
  play-coffeescript-entry-points             
  play-coffeescript-options                  
  play-common-classloader                    
  play-compile-everything                    
  play-conf                                  
  play-copy-assets                           
  play-dist                                  
  play-ebean-enabled                         
  play-hash                                  
  play-javascript-entry-points               
  play-less-entry-points                     
  play-less-options                          
  play-package-everything                    
  play-reload                                
  play-routes-imports                        
  play-templates-formats                     
  play-templates-imports                     
  play-version                               
  poll-interval                              Interval between checks for modified sources by the continuous execution command.
  pom-all-repositories                       If true, includes repositories used in module configurations in the pom repositories section.  If false, only the common repositories are included.
  pom-extra                                  Extra XML to insert into the generated POM.
  pom-include-repository                     Selects repositories to include in the generated POM.
  pom-post-process                           Transforms the generated POM.
  product-directories                        Base directories of build products.
  products                                   Build products that get packaged.
  project-dependencies                       Inter-project dependencies.
  project-descriptors                        Project dependency map for the inter-project resolver.
  project-id                                 The dependency management descriptor for the current module.
  project-info                               Addition project information like formal name, homepage, licenses etc.
  project-resolver                           Resolver that handles inter-project dependencies.
  publish                                    Publishes artifacts to a repository.
  publish-artifact                           Enables (true) or disables (false) publishing an artifact.
  publish-configuration                      Configuration for publishing to a repository.
  publish-local                              Publishes artifacts to the local repository.
  publish-local-configuration                Configuration for publishing to the local repository.
  publish-maven-style                        Configures whether to generate and publish a pom (true) or Ivy file (false).
  publish-to                                 The resolver to publish to.
  resolvers                                  The user-defined additional resolvers for automatically managed dependencies.
  resource-directories                       List of all resource directories, both managed and unmanaged.
  resource-directory                         Default unmanaged resource directory, used for user-defined resources.
  resource-generators                        List of tasks that generate resources.
  resource-managed                           Default managed resource directory, used when generating resources.
  resources                                  All resource files, both managed and unmanaged.
  retrieve-configuration                     Configures retrieving dependencies to the current build.
  retrieve-managed                           If true, enables retrieving dependencies to the current build.  Otherwise, dependencies are used directly from the cache.
  retrieve-pattern                           Pattern used to retrieve managed dependencies to the current build.
  run                                        Runs a main class, passing along arguments provided on the command line.
  run-main                                   Runs the main class selected by the first argument, passing the remaining arguments to the main method.
  runner                                     Implementation used to run a main class.
  sbt-dependency                             Provides a definition for declaring the current version of sbt.
  sbt-plugin                                 If true, enables adding sbt as a dependency and auto-generation of the plugin descriptor file.
  sbt-resolver                               Provides a resolver for obtaining sbt as a dependency.
  sbt-version                                Provides the version of sbt.  This setting should be not be modified.
  scala-home                                 If Some, defines the local Scala installation to use for compilation, running, and testing.
  scala-instance                             Defines the Scala instance to use for compilation, running, and testing.
  scala-source                               Default Scala source directory.
  scala-version                              The version of Scala used for building.
  scalac-options                             Options for the Scala compiler.
  scaladoc-options                           Options for Scaladoc.
  select-main-class                          Selects the main class to run.
  settings                                   Provides access to the project data for the build.
  shell-prompt                               The function that constructs the command prompt from the current build state.
  skip                                       For tasks that support it (currently only 'compile'), setting skip to true will force the task to not to do its work.  This exact semantics may vary by task.
  source-directories                         List of all source directories, both managed and unmanaged.
  source-directory                           Default directory containing sources.
  source-filter                              Filter for selecting sources from default directories.
  source-generators                          List of tasks that generate sources.
  source-managed                             Default directory for sources generated by the build.
  sources                                    All sources, both managed and unmanaged.
  stage                                      
  start-year                                 Year in which the project started.
  state                                      Current build state.
  streams                                    Provides streams for logging and persisting data.
  streams-manager                            Streams manager, which provides streams for different contexts.
  target                                     Main directory for files generated by the build.
  task-temporary-directory                   Directory used for temporary files for tasks that is deleted after each task execution.
  test                                       Executes all tests.
  test-frameworks                            Registered, although not necessarily present, test frameworks.
  test-listeners                             Defines test listeners.
  test-loader                                Provides the class loader used for testing.
  test-only                                  Executes the tests provided as arguments or all tests if no arguments are provided.
  test-options                               Options for running tests.
  test-result-reporter                       
  test-result-reporter-reset                 
  this-project                               Provides the current project for the referencing scope.
  this-project-ref                           Provides a fully-resolved reference to the current project for the referencing scope.
  transitive-classifiers                     List of classifiers used for transitively obtaining extra artifacts for sbt or declared dependencies.
  transitive-update                          UpdateReports for the internal dependencies of this project.
  trap-exit                                  If true, enables exit trapping and thread management for 'run'-like tasks.  This is currently only suitable for serially-executed 'run'-like tasks.
  triggered-message                          The message to show before triggered execution executes an action after sources change.
  unmanaged-base                             The default directory for manually managed libraries.
  unmanaged-classpath                        Classpath entries (deep) that are manually managed.
  unmanaged-jars                             Classpath entries for the current project (shallow) that are manually managed.
  unmanaged-resource-directories             Unmanaged resource directories, containing resources manually created by the user.
  unmanaged-resources                        Unmanaged resources, which are manually created.
  unmanaged-source-directories               Unmanaged source directories, which contain manually created sources.
  unmanaged-sources                          Unmanaged sources, which are manually created.
  update                                     Resolves and optionally retrieves dependencies, producing a report.
  update-classifiers                         Resolves and optionally retrieves classified artifacts, such as javadocs and sources, for dependency definitions, transitively.
  update-configuration                       Configuration for resolving and retrieving managed dependencies.
  update-sbt-classifiers                     Resolves and optionally retrieves classifiers, such as javadocs and sources, for sbt, transitively.
  version                                    The version/revision of the current module.
  watch                                      Continuous execution configuration.
  watch-sources                              Defines the sources in this project for continuous execution to watch for changes.
  watch-transitive-sources                   Defines the sources in all projects for continuous execution to watch.
  watching-message                           The message to show when triggered execution waits for sources to change.
